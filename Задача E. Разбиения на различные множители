def de(k, mi):
    a = []
    # b = []
    i = 1
    while i * i <= k:
        if k % i == 0 and i >= mi:
            a.append(i)
            # b = [k // i] + b
        i += 1

    a.append(k)
    return a


def mnog(n, minmnog, spisok, sp):
    if n == 1:
        sp.append(spisok)
    else:
        d = de(n, minmnog)
        for i in d:
            if i not in spisok:
                mnog(n // i, i + 1, spisok + [i], sp)
                if n == i:
                    return sp


def prov(sp):
    n = 0
    a = []
    for d in sp:
        if d not in a:
            a.append(d)
    return a

n = int(input())
sp = mnog(n, 2, [], [])

print(len(sp))
